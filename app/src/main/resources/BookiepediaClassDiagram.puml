@startuml
'https://plantuml.com/class-diagram


package "dynamodb" {

    class BetDAO {

    }

    class EventDAO {

    }

    class OddDAO {

    }

    class ScheduleDAO {

    }

    class DynamoDBClientProvider {

    }

    package "assets" {

        class LeagueDAO {

        }

        class TeamDAO {

        }

        class BookmakerDAO {

        }
    }

    package "bettinghistory" {

        class WeeklyHistoryDAO {

        }

        class MonthlyHistoryDAO {

        }
    }

    package "dataqualitycheck" {

        class DataQualityScanner {
            - dataQualityPercentage : double
            - model : String
            - threshold : double
            - invalidAttributes : List<String>
            - static final INVALID_ATTRIBUTE_REPLACER : String

            + DataQualityScanner(model : String, threshold : double) : void
            + scan() : void
            + printQualityPercentage() : void
            + getQualityPercentage() : double
        }
    }

    package "espnDAO" {

        class espnDAO {
            - static THRESHOLD : double
            - static INVALID_ATTRIBUTE_REPLACER : String

            + requestQuery() throws IOException : JSONObject
            + extractSchedule(espnResponse : JSONObject) : String
            + extractEvents(espnResponse : JSONObject) : List<String>
            + extractTeam(team : JSONObject, leagueId : String) : String
            + extractLeague(league : JSONObject) : String
        }

        package "constants" {

            class espnRequestConstants {
                + static final NBA : String
                + static final NHL : String
                + static final yyyyMMdd : DateTimeFormatter
                + static final mm_dd_yy : DateTimeFormatter
                + static final NOW : LocalDateTime
                + static final START_DATE : String
                + static final RANGE_DAYS : long
                + static final END_DATE : String
            }
        }
    }

    package "oddsDAO" {

        class oddsDAO {
            - static THRESHOLD : double
            - static INVALID_ATTRIBUTE_REPLACER : String

            + requestQuery() throws IOException : JSONObject
            + extractOdds(oddsResponse : JSONObject) : String
            + extractBookmaker(oddsResponse : JSONObject) : String
        }

        package constants {

            class oddsRequestConstants {

            }
        }
    }

    package "models" {

        class Event {
            - eventId : String
            - scheduleId : String
            - eventName : String
            - eventNameShort : String
            - eventHeadline : String
            - leagueId : String
            - eventDate : String
            - eventSeasonId : String
            - teamHome : String
            - teamAway : String
            - eventStatusId : String
            - eventStatus : String
            - teamWinner : String
            - scoreHome : Integer
            - scoreAway : Integer
            - scoreTotal : Integer
            - links : List<String>

            + getField() : Object
            + setField(value : String) : void
        }

        class Schedule {
            - scheduleId : String
            - leagueId : String
            - leagueName : String
            - timestamp : String
            - eventIdList : List<String>
            - dateRange : String
            - scheduleName : String

            + getField() : Object
            + setField(value : String) : void
        }

        class Bet {
            - betId : String
            - userId : String
            - eventId : String
            - amountWagered : BigDecimal
            - odds : BigDecimal
            - teamBetOn : String
            - projection : BigDecimal
            - bettingMarket : String
            - bookmakerId : String
            - datePlaced : String
            - gainOrLoss : BigDecimal
            - teamHome : String
            - scoreHome : Integer
            - teamHomeLogo : String
            - teamAway : String
            - scoreAway : Integer
            - teamAwayLogo : String
            - teamWinner : String
            - scoreTotal : Integer
            - eventName : String
            - eventHeadline : String
            - eventDate : String
            - eventStatus : String

            + getField() : Object
            + setField(value : String) : void
        }

        class Odds {
            - oddsId : String
            - eventId : String
            - timestamp : String
            - moneyLine : Map<String, BigDecimal>
            - spread : Map<String, BigDecimal>
            - total : Map<String, BigDecimal>

            + getField() : Object
            + setField(value : String) : void
        }

        package "assets" {

            class League {
                - leagueId : String
                - leagueName : String
                - seasonStatusId : String
                - seasonStatus : String
                - seasonYear : String
                - leagueLogo : String

                + getField() : Object
                + setField(value : String) : void
            }

            class Team {
                - leagueId : String
                - teamId : String
                - teamName : String
                - teamNameAbr : String
                - teamLogo : String
                - teamColor : String
                - teamAlternateColor : String
                - teamLinks : List<String>

                + getField() : Object
                + setField(value : String) : void
            }

            class Bookmaker {
                - bookmakerId : String
                - bookmakerName : String
                - bookmakerLogo : String

                + getField() : Object
                + setField(value : String) : void
            }
        }

        package "bettinghistory" {

            class WeeklyHistory {
                - weeklyHistoryId : String
                - userId : String
                - weeklyHistoryName : String
                - date : String
                - weeklyBetCount : Integer
                - weeklyAmountWagered : BigDecimal
                - weeklyGain : BigDecimal
                - weeklyLoss : BigDecimal
                - weeklyBetIdList : List<String>
                - weeklySummary : Map<String, BigDecimal>

                + getField() : Object
                + setField(value : String) : void
            }

            class MonthlyHistory {
                - monthlyHistoryId : String
                - userId : String
                - monthlyHistoryName : String
                - date : String
                - monthlyHistoryIds : List<String>
                - monthlyBetCount : Integer
                - monthlyAmountWagered : BigDecimal
                - monthlyGain : BigDecimal
                - monthlyLoss : BigDecimal
                - monthlyBetIdList : List<String>
                - monthlySummary : Map<String, BigDecimal>

                + getField() : Object
                + setField(value : String) : void
            }
        }
    }
}


package "exceptions" {

    package "dataqualityexception" {

        class DataQualityException {
            - dataQualityPercentage : double
            - model : String
            - threshold : double
            - invalidAttributes : List<String>

            + scan() : void
            + getQualityPercentage() : double
        }

        package "modelexceptions" {
            exception EventDataQualityException {}
            exception LeagueDataQualityException {}
            exception ScheduleDataQualityException {}
            exception TeamDataQualityException {}
        }
    }
}

package lambda {

    class GetScheduleLambda {

    }

    class GetEventsForScheduleLambda {

    }

    class LambdaRequest {

    }

    class LambdaResponse {

    }
}

package "models" {

    class ScheduleModel {
        - scheduleId : String
        - leagueId : String
        - leagueName : String
        - timestamp : String
        - eventIdList : List<String>
        - dateRange : String
        - scheduleName : String

        + getField() : Object
        + builder() : Builder
    }

    class EventModel {
        - eventId : String
        - scheduleId : String
        - eventName : String
        - eventNameShort : String
        - eventHeadline : String
        - leagueId : String
        - eventDate : String
        - eventSeasonId : String
        - teamHome : String
        - teamAway : String
        - eventStatusId : String
        - eventStatus : String
        - teamWinner : String
        - scoreHome : Integer
        - scoreAway : Integer
        - scoreTotal : Integer
        - links : List<String>

        + getField() : Object
        + builder() : Builder
    }

    class BetModel {
        - betId : String
        - userId : String
        - eventId : String
        - amountWagered : BigDecimal
        - odds : BigDecimal
        - teamBetOn : String
        - projection : BigDecimal
        - bettingMarket : String
        - bookmakerId : String
        - datePlaced : String
        - gainOrLoss : BigDecimal
        - teamHome : String
        - scoreHome : Integer
        - teamHomeLogo : String
        - teamAway : String
        - scoreAway : Integer
        - teamAwayLogo : String
        - teamWinner : String
        - scoreTotal : Integer
        - eventName : String
        - eventHeadline : String
        - eventDate : String
        - eventStatus : String

        + getField() : Object
        + builder() : Builder
    }

    class OddsModel {
        - oddsId : String
        - eventId : String
        - timestamp : String
        - moneyLine : Map<String, BigDecimal>
        - spread : Map<String, BigDecimal>
        - total : Map<String, BigDecimal>

        + getField() : Object
        + builder() : Builder
    }

    package "assets" {

        class LeagueModel {
            - leagueId : String
            - leagueName : String
            - seasonStatusId : String
            - seasonStatus : String
            - seasonYear : String
            - leagueLogo : String

            + getField() : Object
            + builder() : Builder
        }

        class TeamModel {
            - leagueId : String
            - teamId : String
            - teamName : String
            - teamNameAbr : String
            - teamLogo : String
            - teamColor : String
            - teamAlternateColor : String
            - teamLinks : List<String>

            + getField() : Object
            + builder() : Builder
        }

        class BookmakerModel {
            - bookmakerId : String
            - bookmakerName : String
            - bookmakerLogo : String

            + getField() : Object
            + builder() : Builder
        }
    }

    package "bettinghistory" {

        class WeeklyHistoryModel {
            - weeklyHistoryId : String
            - userId : String
            - weeklyHistoryName : String
            - date : String
            - weeklyBetCount : Integer
            - weeklyAmountWagered : BigDecimal
            - weeklyGain : BigDecimal
            - weeklyLoss : BigDecimal
            - weeklyBetIdList : List<String>
            - weeklySummary : Map<String, BigDecimal>

            + getField() : Object
            + builder() : Builder
        }

        class MonthlyHistoryModel {
            - monthlyHistoryId : String
            - userId : String
            - monthlyHistoryName : String
            - date : String
            - weeklyHistoryIds : List<String>
            - monthlyBetCount : Integer
            - monthlyAmountWagered : BigDecimal
            - monthlyGain : BigDecimal
            - monthlyLoss : BigDecimal
            - monthlyBetIdList : List<String>
            - monthlySummary : Map<String, BigDecimal>

            + getField() : Object
            + builder() : Builder
        }
    }
}

package utils {

    class CollectionUtils {

    }

    class NullUtils {

    }
}

dynamodb.espnDAO.espnDAO -> dynamodb.espnDAO.constants.espnRequestConstants
dynamodb.espnDAO.espnDAO -[#0000FF50,thickness=15]-> dynamodb.models.Schedule
dynamodb.espnDAO.espnDAO -[#0000FF50,thickness=15]-> dynamodb.models.Event
dynamodb.espnDAO.espnDAO -[#0000FF50,thickness=15]-> dynamodb.models.assets.Team
dynamodb.espnDAO.espnDAO -[#0000FF50,thickness=15]-> dynamodb.models.assets.League
dynamodb.espnDAO.espnDAO -[#0000FF50,thickness=15]-> dynamodb.dataqualitycheck.DataQualityScanner

dynamodb.oddsDAO.oddsDAO -> dynamodb.oddsDAO.constants.oddsRequestConstants
dynamodb.oddsDAO.oddsDAO -[#FF000075,thickness=9]-> dynamodb.models.assets.Bookmaker
dynamodb.oddsDAO.oddsDAO -[#FF000075,thickness=9]-> dynamodb.models.Odds
dynamodb.oddsDAO.oddsDAO -[#FF000075,thickness=9]-> dynamodb.dataqualitycheck.DataQualityScanner

dynamodb.dataqualitycheck.DataQualityScanner --> exceptions.dataqualityexception.DataQualityException

exceptions.dataqualityexception.DataQualityException --> exceptions.dataqualityexception.modelexceptions.ScheduleDataQualityException
exceptions.dataqualityexception.DataQualityException --> exceptions.dataqualityexception.modelexceptions.EventDataQualityException
exceptions.dataqualityexception.DataQualityException --> exceptions.dataqualityexception.modelexceptions.LeagueDataQualityException
exceptions.dataqualityexception.DataQualityException --> exceptions.dataqualityexception.modelexceptions.TeamDataQualityException

dynamodb.models.Schedule o- dynamodb.models.assets.League
dynamodb.models.Schedule *- dynamodb.models.Event
dynamodb.models.Event o- dynamodb.models.assets.Team
dynamodb.models.Event - dynamodb.models.Odds
dynamodb.models.Event o- dynamodb.models.Bet
dynamodb.models.Odds o- dynamodb.models.assets.Bookmaker
dynamodb.models.bettinghistory.WeeklyHistory o- dynamodb.models.Bet
dynamodb.models.bettinghistory.MonthlyHistory o- dynamodb.models.bettinghistory.WeeklyHistory

models.ScheduleModel o- models.assets.LeagueModel
models.ScheduleModel *- models.EventModel
models.EventModel o- models.assets.TeamModel
models.EventModel - models.OddsModel
models.EventModel o- models.BetModel
models.OddsModel o- models.assets.BookmakerModel
models.bettinghistory.WeeklyHistoryModel o- models.BetModel
models.bettinghistory.MonthlyHistoryModel o- models.bettinghistory.WeeklyHistoryModel

dynamodb.models.Schedule .. models.ScheduleModel
dynamodb.models.Event .. models.EventModel
dynamodb.models.Odds .. models.OddsModel
dynamodb.models.Bet .. models.BetModel
dynamodb.models.assets.Team .. models.assets.TeamModel
dynamodb.models.assets.League .. models.assets.LeagueModel
dynamodb.models.assets.Bookmaker .. models.assets.BookmakerModel
dynamodb.models.bettinghistory.WeeklyHistory .. models.bettinghistory.WeeklyHistoryModel
dynamodb.models.bettinghistory.MonthlyHistory .. models.bettinghistory.MonthlyHistoryModel

dynamodb.ScheduleDAO .[#00863195,thickness=6].> dynamodb.models.Schedule
dynamodb.EventDAO .[#00863195,thickness=6].> dynamodb.models.Event
dynamodb.OddDAO .[#00863195,thickness=6].> dynamodb.models.Odds
dynamodb.BetDAO .[#00863195,thickness=6].> dynamodb.models.Bet
dynamodb.assets.LeagueDAO .[#00863195,thickness=6].> dynamodb.models.assets.League
dynamodb.assets.TeamDAO .[#00863195,thickness=6].> dynamodb.models.assets.Team
dynamodb.assets.BookmakerDAO .[#00863195,thickness=6].> dynamodb.models.assets.Bookmaker
dynamodb.bettinghistory.WeeklyHistoryDAO .[#00863195,thickness=6].> dynamodb.models.bettinghistory.WeeklyHistory
dynamodb.bettinghistory.MonthlyHistoryDAO .[#00863195,thickness=6].> dynamodb.models.bettinghistory.MonthlyHistory

lambda.GetScheduleLambda --> lambda.LambdaRequest
lambda.GetScheduleLambda --> lambda.LambdaResponse
lambda.GetEventsForScheduleLambda --> lambda.LambdaRequest
lambda.GetEventsForScheduleLambda --> lambda.LambdaResponse

lambda.LambdaRequest --> utils.CollectionUtils
lambda.LambdaResponse --> utils.CollectionUtils
lambda.LambdaRequest --> utils.NullUtils
lambda.LambdaResponse --> utils.NullUtils

dynamodb.DynamoDBClientProvider --> dynamodb.ScheduleDAO
dynamodb.DynamoDBClientProvider --> dynamodb.EventDAO
dynamodb.DynamoDBClientProvider --> dynamodb.OddDAO
dynamodb.DynamoDBClientProvider --> dynamodb.BetDAO
dynamodb.DynamoDBClientProvider --> dynamodb.assets.LeagueDAO
dynamodb.DynamoDBClientProvider --> dynamodb.assets.TeamDAO
dynamodb.DynamoDBClientProvider --> dynamodb.assets.BookmakerDAO
dynamodb.DynamoDBClientProvider --> dynamodb.bettinghistory.WeeklyHistoryDAO
dynamodb.DynamoDBClientProvider --> dynamodb.bettinghistory.MonthlyHistoryDAO

@enduml